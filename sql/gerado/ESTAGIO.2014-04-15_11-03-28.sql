SET DEFINE OFF;
PROMPT Creating User Emulation ...
CREATE USER Emulation IDENTIFIED BY Emulation DEFAULT TABLESPACE USERS TEMPORARY TABLESPACE TEMP;
GRANT CREATE SESSION, RESOURCE, CREATE VIEW, CREATE MATERIALIZED VIEW,  CREATE SYNONYM,CREATE PUBLIC SYNONYM  TO Emulation;
SET SCAN OFF;
PROMPT Creating User SEMAD_ESTAGIO ...
CREATE USER SEMAD_ESTAGIO IDENTIFIED BY SEMAD_ESTAGIO DEFAULT TABLESPACE USERS TEMPORARY TABLESPACE TEMP;
GRANT CREATE SESSION, RESOURCE, CREATE VIEW, CREATE MATERIALIZED VIEW, CREATE SYNONYM TO SEMAD_ESTAGIO;
connect SEMAD_ESTAGIO/SEMAD_ESTAGIO;

-- DROP SEQUENCE AGENTE_SETORIAL_ESTAGIO_ID_AGE;


PROMPT Creating Sequence AGENTE_SETORIAL_ESTAGIO_ID_AGE ...
CREATE SEQUENCE  AGENTE_SETORIAL_ESTAGIO_ID_AGE  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE AGENCIA_ESTAGIO_ID_AGENCIA_EST;


PROMPT Creating Sequence AGENCIA_ESTAGIO_ID_AGENCIA_EST ...
CREATE SEQUENCE  AGENCIA_ESTAGIO_ID_AGENCIA_EST  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE AGENCIA_ESTAGIO_EMAIL_NB_AGENC;


PROMPT Creating Sequence AGENCIA_ESTAGIO_EMAIL_NB_AGENC ...
CREATE SEQUENCE  AGENCIA_ESTAGIO_EMAIL_NB_AGENC  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE AGENTE_SETORIAL_EMAIL_NB_AGENT;


PROMPT Creating Sequence AGENTE_SETORIAL_EMAIL_NB_AGENT ...
CREATE SEQUENCE  AGENTE_SETORIAL_EMAIL_NB_AGENT  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE BOLSA_ESTAGIO_NB_BOLSA_ESTAGIO;


PROMPT Creating Sequence BOLSA_ESTAGIO_NB_BOLSA_ESTAGIO ...
CREATE SEQUENCE  BOLSA_ESTAGIO_NB_BOLSA_ESTAGIO  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE CONSELHO_PROFISSIONAL_ID_CONSE;


PROMPT Creating Sequence CONSELHO_PROFISSIONAL_ID_CONSE ...
CREATE SEQUENCE  CONSELHO_PROFISSIONAL_ID_CONSE  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE CURSO_ESTAGIO_ID_CURSO_ESTAGIO;


PROMPT Creating Sequence CURSO_ESTAGIO_ID_CURSO_ESTAGIO ...
CREATE SEQUENCE  CURSO_ESTAGIO_ID_CURSO_ESTAGIO  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE DESLIGAMENTO_ESTAGIO_ID_DESLIG;


PROMPT Creating Sequence DESLIGAMENTO_ESTAGIO_ID_DESLIG ...
CREATE SEQUENCE  DESLIGAMENTO_ESTAGIO_ID_DESLIG  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE ESTAGIARIO_NB_ESTAGIARIO_SEQ;


PROMPT Creating Sequence ESTAGIARIO_NB_ESTAGIARIO_SEQ ...
CREATE SEQUENCE  ESTAGIARIO_NB_ESTAGIARIO_SEQ  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE FUNCIONARIO_PE_NB_FUNCIONARIO_;


PROMPT Creating Sequence FUNCIONARIO_PE_NB_FUNCIONARIO_ ...
CREATE SEQUENCE  FUNCIONARIO_PE_NB_FUNCIONARIO_  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE GESTOR_ESTAGIO_NB_GESTOR_ESTAG;


PROMPT Creating Sequence GESTOR_ESTAGIO_NB_GESTOR_ESTAG ...
CREATE SEQUENCE  GESTOR_ESTAGIO_NB_GESTOR_ESTAG  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE OFERTA_VAGA_ID_OFERTA_VAGA_SEQ;


PROMPT Creating Sequence OFERTA_VAGA_ID_OFERTA_VAGA_SEQ ...
CREATE SEQUENCE  OFERTA_VAGA_ID_OFERTA_VAGA_SEQ  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE ORGAO_ESTAGIO_ID_ORGAO_ESTAGIO;


PROMPT Creating Sequence ORGAO_ESTAGIO_ID_ORGAO_ESTAGIO ...
CREATE SEQUENCE  ORGAO_ESTAGIO_ID_ORGAO_ESTAGIO  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE ORGAO_GESTOR_EMAIL_NB_ORGAO_GE;


PROMPT Creating Sequence ORGAO_GESTOR_EMAIL_NB_ORGAO_GE ...
CREATE SEQUENCE  ORGAO_GESTOR_EMAIL_NB_ORGAO_GE  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE ORGAO_GESTOR_ESTAGIO_ID_ORGAO_;


PROMPT Creating Sequence ORGAO_GESTOR_ESTAGIO_ID_ORGAO_ ...
CREATE SEQUENCE  ORGAO_GESTOR_ESTAGIO_ID_ORGAO_  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE PESSOA_ID_PESSOA_SEQ;


PROMPT Creating Sequence PESSOA_ID_PESSOA_SEQ ...
CREATE SEQUENCE  PESSOA_ID_PESSOA_SEQ  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE QUADRO_VAGAS_ESTAGIO_ID_QUADRO;


PROMPT Creating Sequence QUADRO_VAGAS_ESTAGIO_ID_QUADRO ...
CREATE SEQUENCE  QUADRO_VAGAS_ESTAGIO_ID_QUADRO  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE RECESSO_REMUNERADO_ID_RECESSO_;


PROMPT Creating Sequence RECESSO_REMUNERADO_ID_RECESSO_ ...
CREATE SEQUENCE  RECESSO_REMUNERADO_ID_RECESSO_  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE SELECAO_ESTAGIO_ID_SELECAO_EST;


PROMPT Creating Sequence SELECAO_ESTAGIO_ID_SELECAO_EST ...
CREATE SEQUENCE  SELECAO_ESTAGIO_ID_SELECAO_EST  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE TERMO_ADITIVO_ID_TERMO_ADITIVO;


PROMPT Creating Sequence TERMO_ADITIVO_ID_TERMO_ADITIVO ...
CREATE SEQUENCE  TERMO_ADITIVO_ID_TERMO_ADITIVO  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP SEQUENCE VAGAS_ESTAGIO_NB_VAGAS_ESTAGIO;


PROMPT Creating Sequence VAGAS_ESTAGIO_NB_VAGAS_ESTAGIO ...
CREATE SEQUENCE  VAGAS_ESTAGIO_NB_VAGAS_ESTAGIO  
  MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 1  NOCYCLE ;

-- DROP TABLE AGENTE_SETORIAL_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table AGENTE_SETORIAL_ESTAGIO ...
CREATE TABLE AGENTE_SETORIAL_ESTAGIO (
  ID_AGENTE_SETORIAL_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_USUARIO NUMBER(10,0) NOT NULL,
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL,
  TX_CARGO_FUNCAO VARCHAR2(100 CHAR),
  TX_CONTATO VARCHAR2(200 CHAR),
  TX_EMAIL VARCHAR2(100 CHAR)
);


PROMPT Creating Primary Key Constraint PRIMARY_9 on table AGENTE_SETORIAL_ESTAGIO ... 
ALTER TABLE AGENTE_SETORIAL_ESTAGIO
ADD CONSTRAINT PRIMARY_9 PRIMARY KEY
(
  ID_AGENTE_SETORIAL_ESTAGIO
)
ENABLE
;

-- DROP TABLE AGENCIA_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table AGENCIA_ESTAGIO ...
CREATE TABLE AGENCIA_ESTAGIO (
  ID_AGENCIA_ESTAGIO NUMBER(10,0) NOT NULL,
  TX_AGENCIA_ESTAGIO VARCHAR2(254 CHAR) NOT NULL,
  TX_CNPJ VARCHAR2(14 CHAR) NOT NULL,
  TX_SIGLA VARCHAR2(20 CHAR) NOT NULL,
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL,
  TX_EMAIL VARCHAR2(100 CHAR) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_4 on table AGENCIA_ESTAGIO ... 
ALTER TABLE AGENCIA_ESTAGIO
ADD CONSTRAINT PRIMARY_4 PRIMARY KEY
(
  ID_AGENCIA_ESTAGIO
)
ENABLE
;

-- DROP TABLE AGENCIA_ESTAGIO_EMAIL CASCADE CONSTRAINTS;


PROMPT Creating Table AGENCIA_ESTAGIO_EMAIL ...
CREATE TABLE AGENCIA_ESTAGIO_EMAIL (
  ID_AGENCIA_ESTAGIO NUMBER(10,0) NOT NULL,
  NB_AGENCIA_ESTAGIO_EMAIL NUMBER(10,0) NOT NULL,
  TX_EMAIL VARCHAR2(100 CHAR) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_23 on table AGENCIA_ESTAGIO_EMAIL ... 
ALTER TABLE AGENCIA_ESTAGIO_EMAIL
ADD CONSTRAINT PRIMARY_23 PRIMARY KEY
(
  NB_AGENCIA_ESTAGIO_EMAIL,
  ID_AGENCIA_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_AGENCIA_ESTAGIO_EMAIL_AGENC on AGENCIA_ESTAGIO_EMAIL ...
CREATE INDEX fk_AGENCIA_ESTAGIO_EMAIL_AGENC ON AGENCIA_ESTAGIO_EMAIL
(
  ID_AGENCIA_ESTAGIO
) 
;

-- DROP TABLE AGENTE_SETORIAL_EMAIL CASCADE CONSTRAINTS;


PROMPT Creating Table AGENTE_SETORIAL_EMAIL ...
CREATE TABLE AGENTE_SETORIAL_EMAIL (
  ID_AGENTE_SETORIAL_ESTAGIO NUMBER(10,0) NOT NULL,
  NB_AGENTE_SETORIAL_EMAIL NUMBER(10,0) NOT NULL,
  TX_EMAIL VARCHAR2(100 CHAR) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_10 on table AGENTE_SETORIAL_EMAIL ... 
ALTER TABLE AGENTE_SETORIAL_EMAIL
ADD CONSTRAINT PRIMARY_10 PRIMARY KEY
(
  NB_AGENTE_SETORIAL_EMAIL,
  ID_AGENTE_SETORIAL_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_AGENTE_SETORIAL_EMAIL_AGENT on AGENTE_SETORIAL_EMAIL ...
CREATE INDEX fk_AGENTE_SETORIAL_EMAIL_AGENT ON AGENTE_SETORIAL_EMAIL
(
  ID_AGENTE_SETORIAL_ESTAGIO
) 
;

-- DROP TABLE AREA_CONHECIMENTO_GE CASCADE CONSTRAINTS;


PROMPT Creating Table AREA_CONHECIMENTO_GE ...
CREATE TABLE AREA_CONHECIMENTO_GE (
  CS_AREA_CONHECIMENTO NUMBER(10,0) NOT NULL,
  TX_AREA_CONHECIMENTO VARCHAR2(254 CHAR) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_20 on table AREA_CONHECIMENTO_GE ... 
ALTER TABLE AREA_CONHECIMENTO_GE
ADD CONSTRAINT PRIMARY_20 PRIMARY KEY
(
  CS_AREA_CONHECIMENTO
)
ENABLE
;

-- DROP TABLE BOLSA_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table BOLSA_ESTAGIO ...
CREATE TABLE BOLSA_ESTAGIO (
  CS_TIPO_VAGA_ESTAGIO NUMBER(10,0) NOT NULL,
  NB_BOLSA_ESTAGIO NUMBER(10,0) NOT NULL,
  NB_VALOR NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_24 on table BOLSA_ESTAGIO ... 
ALTER TABLE BOLSA_ESTAGIO
ADD CONSTRAINT PRIMARY_24 PRIMARY KEY
(
  NB_BOLSA_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_BOLSA_ESTAGIO_TIPO_VAGA_EST on BOLSA_ESTAGIO ...
CREATE INDEX fk_BOLSA_ESTAGIO_TIPO_VAGA_EST ON BOLSA_ESTAGIO
(
  CS_TIPO_VAGA_ESTAGIO
) 
;

-- DROP TABLE CONSELHO_PROFISSIONAL CASCADE CONSTRAINTS;


PROMPT Creating Table CONSELHO_PROFISSIONAL ...
CREATE TABLE CONSELHO_PROFISSIONAL (
  ID_CONSELHO_PROFISSIONAL NUMBER(10,0) NOT NULL,
  TX_CONSELHO_PROFISSIONAL VARCHAR2(80 CHAR) NOT NULL,
  TX_SIGLA VARCHAR2(20 CHAR) NOT NULL,
  CONSELHO_PROFISSIONALcol VARCHAR2(20 CHAR) NOT NULL,
  ID_UF NUMBER(10,0)
);


PROMPT Creating Primary Key Constraint PRIMARY_1 on table CONSELHO_PROFISSIONAL ... 
ALTER TABLE CONSELHO_PROFISSIONAL
ADD CONSTRAINT PRIMARY_1 PRIMARY KEY
(
  ID_CONSELHO_PROFISSIONAL
)
ENABLE
;

-- DROP TABLE CONTRATO_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table CONTRATO_ESTAGIO ...
CREATE TABLE CONTRATO_ESTAGIO (
  ID_CONTRATO_ESTAGIO NUMBER(10,0) NOT NULL,
  TX_CODIGO_CONTRATO VARCHAR2(20 CHAR) NOT NULL,
  CS_SITUACAO NUMBER(10,0) NOT NULL,
  CS_SELECAO NUMBER(10,0) NOT NULL,
  ID_SELECAO_ESTAGIO NUMBER(10,0),
  NB_VAGAS_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_CURSO_ESTAGIO NUMBER(10,0),
  NB_ESTAGIARIO NUMBER(10,0) NOT NULL,
  TX_TCE VARCHAR2(20 CHAR),
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL
);


COMMENT ON COLUMN CONTRATO_ESTAGIO.CS_SITUACAO IS '1-Aberta, 2-Efetivada, 3-Encaminhada, 4-Cancelada, 5-Autorizado'
;

COMMENT ON COLUMN CONTRATO_ESTAGIO.CS_SELECAO IS '1-ComSelecao, 2-SemSelecao'
;

PROMPT Creating Primary Key Constraint PRIMARY_15 on table CONTRATO_ESTAGIO ... 
ALTER TABLE CONTRATO_ESTAGIO
ADD CONSTRAINT PRIMARY_15 PRIMARY KEY
(
  ID_CONTRATO_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_CONTRATO_ESTAGIO_SELECAO_ES on CONTRATO_ESTAGIO ...
CREATE INDEX fk_CONTRATO_ESTAGIO_SELECAO_ES ON CONTRATO_ESTAGIO
(
  ID_SELECAO_ESTAGIO
) 
;
PROMPT Creating Index fk_CONTRATO_ESTAGIO_ESTAGIARIO on CONTRATO_ESTAGIO ...
CREATE INDEX fk_CONTRATO_ESTAGIO_ESTAGIARIO ON CONTRATO_ESTAGIO
(
  NB_ESTAGIARIO
) 
;
PROMPT Creating Index fk_CONTRATO_ESTAGIO_VAGAS_CURS on CONTRATO_ESTAGIO ...
CREATE INDEX fk_CONTRATO_ESTAGIO_VAGAS_CURS ON CONTRATO_ESTAGIO
(
  NB_VAGAS_ESTAGIO,
  ID_CURSO_ESTAGIO
) 
;

-- DROP TABLE CURSO_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table CURSO_ESTAGIO ...
CREATE TABLE CURSO_ESTAGIO (
  ID_CURSO_ESTAGIO NUMBER(10,0) NOT NULL,
  TX_CURSO_ESTAGIO VARCHAR2(254 CHAR) NOT NULL,
  CS_AREA_CONHECIMENTO NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_11 on table CURSO_ESTAGIO ... 
ALTER TABLE CURSO_ESTAGIO
ADD CONSTRAINT PRIMARY_11 PRIMARY KEY
(
  ID_CURSO_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_CURSO_ESTAGIO_AREA_CONHECIM on CURSO_ESTAGIO ...
CREATE INDEX fk_CURSO_ESTAGIO_AREA_CONHECIM ON CURSO_ESTAGIO
(
  CS_AREA_CONHECIMENTO
) 
;

-- DROP TABLE DESLIGAMENTO_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table DESLIGAMENTO_ESTAGIO ...
CREATE TABLE DESLIGAMENTO_ESTAGIO (
  ID_DESLIGAMENTO_ESTAGIO NUMBER(10,0) NOT NULL,
  TX_CODIGO_DESLIGAMENTO VARCHAR2(20 CHAR) NOT NULL,
  CS_SITUACAO NUMBER(10,0) NOT NULL,
  NB_ESTAGIARIO NUMBER(10,0) NOT NULL,
  ID_CONTRATO_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_ORGAO_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_AGENTE_SETORIAL_ESTAGIO NUMBER(10,0),
  DT_SOLICITACAO DATE NOT NULL,
  DT_DESLIGAMENTO DATE NOT NULL,
  TX_OFICIO VARCHAR2(20 CHAR),
  TX_MOTIVO VARCHAR2(254 CHAR),
  TX_OBSERVACAO VARCHAR2(254 CHAR)
);


PROMPT Creating Primary Key Constraint PRIMARY_29 on table DESLIGAMENTO_ESTAGIO ... 
ALTER TABLE DESLIGAMENTO_ESTAGIO
ADD CONSTRAINT PRIMARY_29 PRIMARY KEY
(
  ID_DESLIGAMENTO_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_DESLIGAMENTO_ESTAGIO_CONTRA on DESLIGAMENTO_ESTAGIO ...
CREATE INDEX fk_DESLIGAMENTO_ESTAGIO_CONTRA ON DESLIGAMENTO_ESTAGIO
(
  ID_CONTRATO_ESTAGIO
) 
;
PROMPT Creating Index fk_DESLIGAMENTO_ESTAGIO_ESTAGI on DESLIGAMENTO_ESTAGIO ...
CREATE INDEX fk_DESLIGAMENTO_ESTAGIO_ESTAGI ON DESLIGAMENTO_ESTAGIO
(
  NB_ESTAGIARIO
) 
;
PROMPT Creating Index fk_DESLIGAMENTO_ESTAGIO_ORGAO_ on DESLIGAMENTO_ESTAGIO ...
CREATE INDEX fk_DESLIGAMENTO_ESTAGIO_ORGAO_ ON DESLIGAMENTO_ESTAGIO
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
) 
;

-- DROP TABLE ESTAGIARIO CASCADE CONSTRAINTS;


PROMPT Creating Table ESTAGIARIO ...
CREATE TABLE ESTAGIARIO (
  NB_ESTAGIARIO NUMBER(10,0) NOT NULL,
  ID_PESSOA_ESTAGIARIO NUMBER(10,0) NOT NULL,
  TX_CEP VARCHAR2(10 CHAR),
  TX_ENDERECO VARCHAR2(254 CHAR),
  NB_NUMERO NUMBER(10,0),
  TX_COMPLEMENTO VARCHAR2(254 CHAR),
  TX_BAIRRO VARCHAR2(100 CHAR),
  NB_ZONA NUMBER(10,0),
  TX_CONTATO VARCHAR2(200 CHAR),
  TX_EMAIL VARCHAR2(100 CHAR),
  TX_AGENCIA_BANCO VARCHAR2(20 CHAR),
  TX_CONTA_CORRENTE VARCHAR2(20 CHAR),
  CS_SITUACAO NUMBER(10,0),
  NB_FUNCIONARIO NUMBER(10,0),
  ID_PESSOA_FUNCIONARIO NUMBER(10,0)
);


PROMPT Creating Primary Key Constraint PRIMARY_16 on table ESTAGIARIO ... 
ALTER TABLE ESTAGIARIO
ADD CONSTRAINT PRIMARY_16 PRIMARY KEY
(
  NB_ESTAGIARIO,
  ID_PESSOA_ESTAGIARIO
)
ENABLE
;
PROMPT Creating Index fk_ESTAGIARIO_PESSOA1 on ESTAGIARIO ...
CREATE INDEX fk_ESTAGIARIO_PESSOA1 ON ESTAGIARIO
(
  ID_PESSOA_ESTAGIARIO
) 
;
PROMPT Creating Index fk_ESTAGIARIO_FUNCIONARIO_PE1 on ESTAGIARIO ...
CREATE INDEX fk_ESTAGIARIO_FUNCIONARIO_PE1 ON ESTAGIARIO
(
  NB_FUNCIONARIO,
  ID_PESSOA_FUNCIONARIO
) 
;

-- DROP TABLE ESTAGIARIO2 CASCADE CONSTRAINTS;


PROMPT Creating Table ESTAGIARIO2 ...
CREATE TABLE ESTAGIARIO2 (
  ID_PESSOA_ESTAGIARIO NUMBER(10,0) NOT NULL,
  ID_PESSOA_FUNCIONARIO NUMBER(10,0),
  NB_FUNCIONARIO NUMBER(10,0),
  TX_CEP VARCHAR2(10 CHAR),
  TX_ENDERECO VARCHAR2(254 CHAR),
  NB_NUMERO NUMBER(10,0),
  TX_COMPLEMENTO VARCHAR2(254 CHAR),
  TX_BAIRRO VARCHAR2(100 CHAR),
  TX_CONTATO VARCHAR2(200 CHAR),
  TX_EMAIL VARCHAR2(100 CHAR),
  TX_AGENCIA_BANCO VARCHAR2(20 CHAR),
  TX_CONTA_CORRENTE VARCHAR2(20 CHAR)
);



-- DROP TABLE ESTAGIARIO_CONTRATO CASCADE CONSTRAINTS;


PROMPT Creating Table ESTAGIARIO_CONTRATO ...
CREATE TABLE ESTAGIARIO_CONTRATO (
  NB_ESTAGIARIO_CONTRATO NUMBER(10,0) NOT NULL,
  ID_CONTRATO_ESTAGIO NUMBER(10,0) NOT NULL,
  CS_SITUACAO NUMBER(10,0) NOT NULL,
  CS_SITUACAO_ESTAGIARIO NUMBER(10,0) NOT NULL,
  DT_INICIO_VIGENCIA DATE,
  DT_FIM_VIGENCIA DATE,
  TX_HORA_INICIO VARCHAR2(20 CHAR),
  TX_HORA_FINAL VARCHAR2(20 CHAR),
  DT_INICIO_RECESSO DATE,
  DT_FIM_RECESSO DATE,
  DT_DESLIGAMENTO DATE
);


COMMENT ON COLUMN ESTAGIARIO_CONTRATO.CS_SITUACAO IS '1-Em Análise, 2-Aprovado, 3-Reprovado, 4-Cancelado e 5-Autorizado'
;

COMMENT ON COLUMN ESTAGIARIO_CONTRATO.CS_SITUACAO_ESTAGIARIO IS '1-TADITIVO, 2-RESESSO, 3-DESLIGAMENTO'
;

PROMPT Creating Primary Key Constraint PRIMARY_5 on table ESTAGIARIO_CONTRATO ... 
ALTER TABLE ESTAGIARIO_CONTRATO
ADD CONSTRAINT PRIMARY_5 PRIMARY KEY
(
  NB_ESTAGIARIO_CONTRATO,
  ID_CONTRATO_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_ESTAGIARIO_CONTRATO_CONTRAT on ESTAGIARIO_CONTRATO ...
CREATE INDEX fk_ESTAGIARIO_CONTRATO_CONTRAT ON ESTAGIARIO_CONTRATO
(
  ID_CONTRATO_ESTAGIO
) 
;

-- DROP TABLE ESTAGIARIO_ESCOLARIDADE CASCADE CONSTRAINTS;


PROMPT Creating Table ESTAGIARIO_ESCOLARIDADE ...
CREATE TABLE ESTAGIARIO_ESCOLARIDADE (
  NB_ESTAGIARIO NUMBER(10,0) NOT NULL,
  CS_ESCOLARIDADE NUMBER(10,0),
  ID_CURSO_ESTAGIO NUMBER(10,0),
  NB_PERIODO_ANO NUMBER(10,0),
  CS_TURNO NUMBER(10,0)
);


COMMENT ON COLUMN ESTAGIARIO_ESCOLARIDADE.CS_ESCOLARIDADE IS '1-Medio, 2-Tecnico, 3-Superior'
;

COMMENT ON COLUMN ESTAGIARIO_ESCOLARIDADE.CS_TURNO IS '1-Matutino, 2-Vespertino, 3-Noturno, 4-Diurno'
;

PROMPT Creating Primary Key Constraint PRIMARY_25 on table ESTAGIARIO_ESCOLARIDADE ... 
ALTER TABLE ESTAGIARIO_ESCOLARIDADE
ADD CONSTRAINT PRIMARY_25 PRIMARY KEY
(
  NB_ESTAGIARIO
)
ENABLE
;

-- DROP TABLE ESTAGIARIO_SELECAO CASCADE CONSTRAINTS;


PROMPT Creating Table ESTAGIARIO_SELECAO ...
CREATE TABLE ESTAGIARIO_SELECAO (
  ID_SELECAO_ESTAGIO NUMBER(10,0) NOT NULL,
  NB_ESTAGIARIO NUMBER(10,0) NOT NULL,
  CS_SITUACAO NUMBER(10,0) NOT NULL,
  TX_MOTIVO_SITUACAO VARCHAR2(254 CHAR),
  DT_INICIO DATE,
  DT_FINAL DATE,
  TX_HORA_INICIO VARCHAR2(20 CHAR),
  TX_HORA_FINAL VARCHAR2(20 CHAR),
  TX_ATIVIDADES VARCHAR2(400 CHAR),
  NB_VALOR_TRANSPORTE NUMBER(10,0),
  TX_LOCAL_ESTAGIO VARCHAR2(254 CHAR),
  ID_PESSOA_SUPERVISOR NUMBER(10,0)
);


COMMENT ON COLUMN ESTAGIARIO_SELECAO.CS_SITUACAO IS '1-Em Análise, 2-Aprovado, 3-Reprovado, 4-Cancelado e 5-Autorizado'
;

PROMPT Creating Primary Key Constraint PRIMARY_6 on table ESTAGIARIO_SELECAO ... 
ALTER TABLE ESTAGIARIO_SELECAO
ADD CONSTRAINT PRIMARY_6 PRIMARY KEY
(
  ID_SELECAO_ESTAGIO,
  NB_ESTAGIARIO
)
ENABLE
;
PROMPT Creating Index fk_ESTAGIARIO_SELECAO_ESTAGIAR on ESTAGIARIO_SELECAO ...
CREATE INDEX fk_ESTAGIARIO_SELECAO_ESTAGIAR ON ESTAGIARIO_SELECAO
(
  NB_ESTAGIARIO
) 
;

-- DROP TABLE FUNCIONARIO_PE CASCADE CONSTRAINTS;


PROMPT Creating Table FUNCIONARIO_PE ...
CREATE TABLE FUNCIONARIO_PE (
  ID_PESSOA_FUNCIONARIO NUMBER(10,0) NOT NULL,
  NB_FUNCIONARIO NUMBER(10,0) NOT NULL,
  ID_UNIDADE_GESTORA NUMBER(10,0),
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  TX_NOME_GUERRA VARCHAR2(80 CHAR) NOT NULL,
  BL_FOTO BLOB,
  CS_TIPO_FUNCIONARIO_PE NUMBER(10,0) NOT NULL,
  CS_SITUACAO_FUNCIONARIO NUMBER(10,0)
);


PROMPT Creating Primary Key Constraint PRIMARY_17 on table FUNCIONARIO_PE ... 
ALTER TABLE FUNCIONARIO_PE
ADD CONSTRAINT PRIMARY_17 PRIMARY KEY
(
  NB_FUNCIONARIO,
  ID_PESSOA_FUNCIONARIO
)
ENABLE
;
PROMPT Creating Index fk_FUNCIONARIO_PE_PESSOA_FISIC on FUNCIONARIO_PE ...
CREATE INDEX fk_FUNCIONARIO_PE_PESSOA_FISIC ON FUNCIONARIO_PE
(
  ID_PESSOA_FUNCIONARIO
) 
;

-- DROP TABLE GESTOR_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table GESTOR_ESTAGIO ...
CREATE TABLE GESTOR_ESTAGIO (
  ID_ORGAO_GESTOR_ESTAGIO NUMBER(10,0) NOT NULL,
  NB_GESTOR_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_USUARIO NUMBER(10,0) NOT NULL,
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL,
  TX_EMAIL VARCHAR2(100 CHAR)
);


PROMPT Creating Primary Key Constraint PRIMARY_18 on table GESTOR_ESTAGIO ... 
ALTER TABLE GESTOR_ESTAGIO
ADD CONSTRAINT PRIMARY_18 PRIMARY KEY
(
  NB_GESTOR_ESTAGIO,
  ID_ORGAO_GESTOR_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_GESTOR_ESTAGIO_ORGAO_GESTOR on GESTOR_ESTAGIO ...
CREATE INDEX fk_GESTOR_ESTAGIO_ORGAO_GESTOR ON GESTOR_ESTAGIO
(
  ID_ORGAO_GESTOR_ESTAGIO
) 
;

-- DROP TABLE INSTITUICAO_ENSINO CASCADE CONSTRAINTS;


PROMPT Creating Table INSTITUICAO_ENSINO ...
CREATE TABLE INSTITUICAO_ENSINO (
  CS_INSTITUICAO_ENSINO NUMBER(10,0) NOT NULL,
  TX_INSTITUICAO_ENSINO VARCHAR2(254 CHAR) NOT NULL,
  TX_SIGLA VARCHAR2(20 CHAR) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_32 on table INSTITUICAO_ENSINO ... 
ALTER TABLE INSTITUICAO_ENSINO
ADD CONSTRAINT PRIMARY_32 PRIMARY KEY
(
  CS_INSTITUICAO_ENSINO
)
ENABLE
;

-- DROP TABLE OFERTA_VAGA CASCADE CONSTRAINTS;


PROMPT Creating Table OFERTA_VAGA ...
CREATE TABLE OFERTA_VAGA (
  ID_OFERTA_VAGA NUMBER(10,0) NOT NULL,
  TX_CODIGO_OFERTA_VAGA VARCHAR2(20 CHAR) NOT NULL,
  ID_ORGAO_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_AGENTE_SETORIAL_ESTAGIO NUMBER(10,0),
  ID_PESSOA_SUPERVISOR NUMBER(10,0),
  TX_TELEFONE VARCHAR2(20 CHAR),
  TX_PESSOA_CONTATO VARCHAR2(100 CHAR),
  TX_CARGO_FUNCAO VARCHAR2(100 CHAR),
  TX_EMAIL VARCHAR2(100 CHAR),
  TX_ENDERECO VARCHAR2(200 CHAR),
  TX_PONTO_REFERENCIA VARCHAR2(100 CHAR),
  TX_NUM_ONIBUS VARCHAR2(20 CHAR),
  NB_VAGAS_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_CURSO_ESTAGIO NUMBER(10,0),
  NB_QUANTIDADE NUMBER(10,0) NOT NULL,
  NB_QTDE_EMCAMINHADO NUMBER(10,0) NOT NULL,
  DT_ENTREVISTA DATE NOT NULL,
  TX_HORARIO VARCHAR2(20 CHAR) NOT NULL,
  NB_DURACAO_ESTAGIO NUMBER(10,0),
  NB_VALOR_TRANSPORTE NUMBER(10,0) NOT NULL,
  CS_ESCOLARIDADE NUMBER(10,0) NOT NULL,
  NB_SEMESTRE NUMBER(10,0),
  TX_HORA_INICIO VARCHAR2(20 CHAR) NOT NULL,
  TX_HORA_FINAL VARCHAR2(20 CHAR) NOT NULL,
  TX_OUTROS_HORARIOS VARCHAR2(100 CHAR),
  CS_WINDOWS NUMBER(10,0),
  CS_WORD NUMBER(10,0),
  CS_EXCEL NUMBER(10,0),
  CS_POWERPOINT NUMBER(10,0),
  CS_INTERNET NUMBER(10,0),
  CS_CORELDRAW NUMBER(10,0),
  CS_PHOTOSHOP NUMBER(10,0),
  CS_AUTOCAD NUMBER(10,0),
  CS_WEBDESIGN NUMBER(10,0),
  CS_INGLES NUMBER(10,0),
  CS_ESPANHOL NUMBER(10,0),
  CS_FRANCES NUMBER(10,0),
  CS_ALEMAO NUMBER(10,0),
  TX_OUTRAS_LINGUAS VARCHAR2(100 CHAR),
  TX_OUTROS_REQUISITOS VARCHAR2(100 CHAR),
  CS_SEXO NUMBER(10,0),
  TX_ATIVIDADES VARCHAR2(400 CHAR) NOT NULL,
  CS_SITUACAO VARCHAR2(45 CHAR) NOT NULL,
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL
);


COMMENT ON COLUMN OFERTA_VAGA.CS_ESCOLARIDADE IS '1-MEDIO, 2-TECNICO, 3-SUPERIOR'
;

COMMENT ON COLUMN OFERTA_VAGA.CS_SEXO IS '1-MASCULINO, 2-FEMININO'
;

COMMENT ON COLUMN OFERTA_VAGA.CS_SITUACAO IS '1-Aberta, 2-Efetivada, 3-Encaminhada, 4-Cancelada, 5-Autorizado'
;

PROMPT Creating Primary Key Constraint PRIMARY_26 on table OFERTA_VAGA ... 
ALTER TABLE OFERTA_VAGA
ADD CONSTRAINT PRIMARY_26 PRIMARY KEY
(
  ID_OFERTA_VAGA
)
ENABLE
;
PROMPT Creating Index fk_OFERTA_VAGA_VAGAS_CURSO_EST on OFERTA_VAGA ...
CREATE INDEX fk_OFERTA_VAGA_VAGAS_CURSO_EST ON OFERTA_VAGA
(
  NB_VAGAS_ESTAGIO,
  ID_CURSO_ESTAGIO
) 
;
PROMPT Creating Index fk_OFERTA_VAGA_SUPERVISOR_ESTA on OFERTA_VAGA ...
CREATE INDEX fk_OFERTA_VAGA_SUPERVISOR_ESTA ON OFERTA_VAGA
(
  ID_PESSOA_SUPERVISOR
) 
;
PROMPT Creating Index fk_OFERTA_VAGA_ORGAO_AGENTE_SE on OFERTA_VAGA ...
CREATE INDEX fk_OFERTA_VAGA_ORGAO_AGENTE_SE ON OFERTA_VAGA
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
) 
;

-- DROP TABLE ORGAO_AGENTE_SETORIAL CASCADE CONSTRAINTS;


PROMPT Creating Table ORGAO_AGENTE_SETORIAL ...
CREATE TABLE ORGAO_AGENTE_SETORIAL (
  DT_ATUALIZACAO DATE NOT NULL,
  ID_ORGAO_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_AGENTE_SETORIAL_ESTAGIO NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_3 on table ORGAO_AGENTE_SETORIAL ... 
ALTER TABLE ORGAO_AGENTE_SETORIAL
ADD CONSTRAINT PRIMARY_3 PRIMARY KEY
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_ORGAO_AGENTE_SETORIAL_AGENT on ORGAO_AGENTE_SETORIAL ...
CREATE INDEX fk_ORGAO_AGENTE_SETORIAL_AGENT ON ORGAO_AGENTE_SETORIAL
(
  ID_AGENTE_SETORIAL_ESTAGIO
) 
;

-- DROP TABLE ORGAO_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table ORGAO_ESTAGIO ...
CREATE TABLE ORGAO_ESTAGIO (
  ID_ORGAO_ESTAGIO NUMBER(10,0) NOT NULL,
  TX_ORGAO_ESTAGIO VARCHAR2(254 CHAR) NOT NULL,
  TX_CNPJ VARCHAR2(14 CHAR) NOT NULL,
  CS_STATUS NUMBER(10,0) NOT NULL,
  ID_UNIDADE_ORG NUMBER(10,0),
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_13 on table ORGAO_ESTAGIO ... 
ALTER TABLE ORGAO_ESTAGIO
ADD CONSTRAINT PRIMARY_13 PRIMARY KEY
(
  ID_ORGAO_ESTAGIO
)
ENABLE
;

-- DROP TABLE ORGAO_GESTOR_EMAIL CASCADE CONSTRAINTS;


PROMPT Creating Table ORGAO_GESTOR_EMAIL ...
CREATE TABLE ORGAO_GESTOR_EMAIL (
  NB_GESTOR_ESTAGIO NUMBER(10,0) NOT NULL,
  NB_ORGAO_GESTOR_EMAIL NUMBER(10,0) NOT NULL,
  TX_EMAIL VARCHAR2(100 CHAR) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_21 on table ORGAO_GESTOR_EMAIL ... 
ALTER TABLE ORGAO_GESTOR_EMAIL
ADD CONSTRAINT PRIMARY_21 PRIMARY KEY
(
  NB_ORGAO_GESTOR_EMAIL,
  NB_GESTOR_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_ORGAO_GESTOR_EMAIL_GESTOR_E on ORGAO_GESTOR_EMAIL ...
CREATE INDEX fk_ORGAO_GESTOR_EMAIL_GESTOR_E ON ORGAO_GESTOR_EMAIL
(
  NB_GESTOR_ESTAGIO
) 
;

-- DROP TABLE ORGAO_GESTOR_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table ORGAO_GESTOR_ESTAGIO ...
CREATE TABLE ORGAO_GESTOR_ESTAGIO (
  ID_ORGAO_GESTOR_ESTAGIO NUMBER(10,0) NOT NULL,
  TX_ORGAO_GESTOR_ESTAGIO VARCHAR2(254 CHAR) NOT NULL,
  ID_UNIDADE_ORG NUMBER(10,0),
  TX_CNPJ VARCHAR2(14 CHAR) NOT NULL,
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_14 on table ORGAO_GESTOR_ESTAGIO ... 
ALTER TABLE ORGAO_GESTOR_ESTAGIO
ADD CONSTRAINT PRIMARY_14 PRIMARY KEY
(
  ID_ORGAO_GESTOR_ESTAGIO
)
ENABLE
;

-- DROP TABLE PESSOA CASCADE CONSTRAINTS;


PROMPT Creating Table PESSOA ...
CREATE TABLE PESSOA (
  ID_PESSOA NUMBER(10,0) NOT NULL,
  TX_NOME VARCHAR2(80 CHAR) NOT NULL,
  CS_TIPO_PESSOA NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_30 on table PESSOA ... 
ALTER TABLE PESSOA
ADD CONSTRAINT PRIMARY_30 PRIMARY KEY
(
  ID_PESSOA
)
ENABLE
;

-- DROP TABLE PESSOA_FISICA CASCADE CONSTRAINTS;


PROMPT Creating Table PESSOA_FISICA ...
CREATE TABLE PESSOA_FISICA (
  ID_PESSOA NUMBER(10,0) NOT NULL,
  DT_NASCIMENTO DATE NOT NULL,
  NB_CPF VARCHAR2(11 CHAR) NOT NULL,
  NB_RG VARCHAR2(20 CHAR),
  CS_SEXO NUMBER(10,0),
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_12 on table PESSOA_FISICA ... 
ALTER TABLE PESSOA_FISICA
ADD CONSTRAINT PRIMARY_12 PRIMARY KEY
(
  ID_PESSOA
)
ENABLE
;

-- DROP TABLE QUADRO_VAGAS_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table QUADRO_VAGAS_ESTAGIO ...
CREATE TABLE QUADRO_VAGAS_ESTAGIO (
  ID_QUADRO_VAGAS_ESTAGIO NUMBER(10,0) NOT NULL,
  CS_SITUACAO NUMBER(10,0) NOT NULL,
  TX_CODIGO VARCHAR2(20 CHAR) NOT NULL,
  ID_CONTRATO_CP VARCHAR2(45 CHAR),
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL,
  ID_ORGAO_GESTOR_ESTAGIO NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_31 on table QUADRO_VAGAS_ESTAGIO ... 
ALTER TABLE QUADRO_VAGAS_ESTAGIO
ADD CONSTRAINT PRIMARY_31 PRIMARY KEY
(
  ID_QUADRO_VAGAS_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_QUADRO_VAGAS_ESTAGIO_ORGAO_ on QUADRO_VAGAS_ESTAGIO ...
CREATE INDEX fk_QUADRO_VAGAS_ESTAGIO_ORGAO_ ON QUADRO_VAGAS_ESTAGIO
(
  ID_ORGAO_GESTOR_ESTAGIO
) 
;

-- DROP TABLE RECESSO_REMUNERADO CASCADE CONSTRAINTS;


PROMPT Creating Table RECESSO_REMUNERADO ...
CREATE TABLE RECESSO_REMUNERADO (
  ID_RECESSO_REMUNERADO NUMBER(10,0) NOT NULL,
  TX_CODIGO_RECESSO_REMUNERADO VARCHAR2(20 CHAR) NOT NULL,
  CS_SITUACAO NUMBER(10,0) NOT NULL,
  NB_ESTAGIARIO NUMBER(10,0) NOT NULL,
  ID_CONTRATO_ESTAGIO NUMBER(10,0) NOT NULL,
  CS_REALIZACAO NUMBER(10,0) NOT NULL,
  ID_ORGAO_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_AGENTE_SETORIAL_ESTAGIO NUMBER(10,0),
  NB_ANO_REFERENCIA NUMBER(10,0) NOT NULL,
  NB_MES_REFERENCIA NUMBER(10,0) NOT NULL,
  DT_INICIO_RECESSO DATE NOT NULL,
  DT_FIM_RECESSO DATE NOT NULL,
  DT_ADIAMENTO DATE,
  TX_JUSTIFICATIVA_ADIAMENTO VARCHAR2(254 CHAR),
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_7 on table RECESSO_REMUNERADO ... 
ALTER TABLE RECESSO_REMUNERADO
ADD CONSTRAINT PRIMARY_7 PRIMARY KEY
(
  ID_RECESSO_REMUNERADO
)
ENABLE
;
PROMPT Creating Index fk_RECESSO_REMUNERADO_ESTAGIAR on RECESSO_REMUNERADO ...
CREATE INDEX fk_RECESSO_REMUNERADO_ESTAGIAR ON RECESSO_REMUNERADO
(
  NB_ESTAGIARIO
) 
;
PROMPT Creating Index fk_RECESSO_REMUNERADO_CONTRATO on RECESSO_REMUNERADO ...
CREATE INDEX fk_RECESSO_REMUNERADO_CONTRATO ON RECESSO_REMUNERADO
(
  ID_CONTRATO_ESTAGIO
) 
;
PROMPT Creating Index fk_RECESSO_REMUNERADO_ORGAO_AG on RECESSO_REMUNERADO ...
CREATE INDEX fk_RECESSO_REMUNERADO_ORGAO_AG ON RECESSO_REMUNERADO
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
) 
;

-- DROP TABLE SELECAO_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table SELECAO_ESTAGIO ...
CREATE TABLE SELECAO_ESTAGIO (
  ID_SELECAO_ESTAGIO NUMBER(10,0) NOT NULL,
  TX_CODIGO_SELECAO VARCHAR2(20 CHAR) NOT NULL,
  ID_OFERTA_VAGA NUMBER(10,0) NOT NULL,
  CS_SITUACAO NUMBER(10,0) NOT NULL,
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL
);


COMMENT ON COLUMN SELECAO_ESTAGIO.CS_SITUACAO IS '1-Aberta, 2-Efetivada, 3-Encaminhada, 4-Cancelada'
;

PROMPT Creating Primary Key Constraint PRIMARY_22 on table SELECAO_ESTAGIO ... 
ALTER TABLE SELECAO_ESTAGIO
ADD CONSTRAINT PRIMARY_22 PRIMARY KEY
(
  ID_SELECAO_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_SELECAO_ESTAGIO_OFERTA_VAGA on SELECAO_ESTAGIO ...
CREATE INDEX fk_SELECAO_ESTAGIO_OFERTA_VAGA ON SELECAO_ESTAGIO
(
  ID_OFERTA_VAGA
) 
;

-- DROP TABLE SUPERVISOR_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table SUPERVISOR_ESTAGIO ...
CREATE TABLE SUPERVISOR_ESTAGIO (
  TX_FORMACAO VARCHAR2(254 CHAR) NOT NULL,
  TX_CARGO_FUNCAO VARCHAR2(100 CHAR) NOT NULL,
  TX_TEMPO_EXPERIENCIA VARCHAR2(45 CHAR) NOT NULL,
  TX_EMAIL VARCHAR2(20 CHAR) NOT NULL,
  TX_CURRICULO VARCHAR2(2000 CHAR) NOT NULL,
  NB_INSCRICAO_CONSELHO VARCHAR2(80 CHAR) NOT NULL,
  ID_CONSELHO_PROFISSIONAL NUMBER(10,0) NOT NULL,
  ID_PESSOA_FUNCIONARIO NUMBER(10,0) NOT NULL,
  NB_FUNCIONARIO NUMBER(10,0) NOT NULL,
  ID_PESSOA_SUPERVISOR NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_2 on table SUPERVISOR_ESTAGIO ... 
ALTER TABLE SUPERVISOR_ESTAGIO
ADD CONSTRAINT PRIMARY_2 PRIMARY KEY
(
  ID_PESSOA_SUPERVISOR
)
ENABLE
;
PROMPT Creating Index FK_CONSELHO_PROFISSIONAL on SUPERVISOR_ESTAGIO ...
CREATE INDEX FK_CONSELHO_PROFISSIONAL ON SUPERVISOR_ESTAGIO
(
  ID_CONSELHO_PROFISSIONAL
) 
;
PROMPT Creating Index fk_SUPERVISOR_ESTAGIO_FUNCIONA on SUPERVISOR_ESTAGIO ...
CREATE INDEX fk_SUPERVISOR_ESTAGIO_FUNCIONA ON SUPERVISOR_ESTAGIO
(
  NB_FUNCIONARIO,
  ID_PESSOA_FUNCIONARIO
) 
;

-- DROP TABLE TERMO_ADITIVO CASCADE CONSTRAINTS;


PROMPT Creating Table TERMO_ADITIVO ...
CREATE TABLE TERMO_ADITIVO (
  ID_TERMO_ADITIVO NUMBER(10,0) NOT NULL,
  TX_CODIGO_TERMO_ADITIVO VARCHAR2(20 CHAR) NOT NULL,
  CS_SITUACAO NUMBER(10,0) NOT NULL,
  NB_ESTAGIARIO NUMBER(10,0) NOT NULL,
  ID_CONTRATO_ESTAGIO NUMBER(10,0) NOT NULL,
  TX_MOTIVO VARCHAR2(254 CHAR) NOT NULL,
  DT_VIGENCIA DATE,
  DT_PRORROGACAO DATE,
  TX_INICIO_HORARIO VARCHAR2(20 CHAR),
  TX_FIM_HORARIO VARCHAR2(20 CHAR),
  DT_PAG_BOLSA DATE,
  CS_TIPO_VAGA_ESTAGIO NUMBER(10,0),
  TX_OUTRAS_ALTERACOES VARCHAR2(2000 CHAR),
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_27 on table TERMO_ADITIVO ... 
ALTER TABLE TERMO_ADITIVO
ADD CONSTRAINT PRIMARY_27 PRIMARY KEY
(
  ID_TERMO_ADITIVO
)
ENABLE
;
PROMPT Creating Index fk_TERMO_ADITIVO_CONTRATO_ESTA on TERMO_ADITIVO ...
CREATE INDEX fk_TERMO_ADITIVO_CONTRATO_ESTA ON TERMO_ADITIVO
(
  ID_CONTRATO_ESTAGIO
) 
;
PROMPT Creating Index fk_TERMO_ADITIVO_ESTAGIARIO1 on TERMO_ADITIVO ...
CREATE INDEX fk_TERMO_ADITIVO_ESTAGIARIO1 ON TERMO_ADITIVO
(
  NB_ESTAGIARIO
) 
;

-- DROP TABLE TIPO_VAGA_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table TIPO_VAGA_ESTAGIO ...
CREATE TABLE TIPO_VAGA_ESTAGIO (
  CS_TIPO_VAGA_ESTAGIO NUMBER(10,0) NOT NULL,
  TX_TIPO_VAGA_ESTAGIO VARCHAR2(254 CHAR) NOT NULL,
  CS_CARGA_HORARIA NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_8 on table TIPO_VAGA_ESTAGIO ... 
ALTER TABLE TIPO_VAGA_ESTAGIO
ADD CONSTRAINT PRIMARY_8 PRIMARY KEY
(
  CS_TIPO_VAGA_ESTAGIO
)
ENABLE
;

-- DROP TABLE VAGAS_CURSO_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table VAGAS_CURSO_ESTAGIO ...
CREATE TABLE VAGAS_CURSO_ESTAGIO (
  NB_VAGAS_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_CURSO_ESTAGIO NUMBER(10,0) NOT NULL,
  NB_QUANTIDADE NUMBER(10,0) NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_28 on table VAGAS_CURSO_ESTAGIO ... 
ALTER TABLE VAGAS_CURSO_ESTAGIO
ADD CONSTRAINT PRIMARY_28 PRIMARY KEY
(
  NB_VAGAS_ESTAGIO,
  ID_CURSO_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_VAGAS_CURSO_ESTAGIO_CURSO_E on VAGAS_CURSO_ESTAGIO ...
CREATE INDEX fk_VAGAS_CURSO_ESTAGIO_CURSO_E ON VAGAS_CURSO_ESTAGIO
(
  ID_CURSO_ESTAGIO
) 
;

-- DROP TABLE VAGAS_ESTAGIO CASCADE CONSTRAINTS;


PROMPT Creating Table VAGAS_ESTAGIO ...
CREATE TABLE VAGAS_ESTAGIO (
  NB_VAGAS_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_QUADRO_VAGAS_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_ORGAO_ESTAGIO NUMBER(10,0) NOT NULL,
  ID_AGENCIA_ESTAGIO NUMBER(10,0) NOT NULL,
  CS_TIPO_VAGA_ESTAGIO NUMBER(10,0) NOT NULL,
  NB_QUANTIDADE NUMBER(10,0) NOT NULL,
  DT_CADASTRO DATE NOT NULL,
  DT_ATUALIZACAO DATE NOT NULL,
  ID_USUARIO_CADASTRO NUMBER(10,0) NOT NULL,
  ID_USUARIO_ATUALIZACAO NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY_19 on table VAGAS_ESTAGIO ... 
ALTER TABLE VAGAS_ESTAGIO
ADD CONSTRAINT PRIMARY_19 PRIMARY KEY
(
  NB_VAGAS_ESTAGIO,
  ID_QUADRO_VAGAS_ESTAGIO
)
ENABLE
;
PROMPT Creating Index fk_VAGAS_ESTAGIO_AGENCIA_ESTAG on VAGAS_ESTAGIO ...
CREATE INDEX fk_VAGAS_ESTAGIO_AGENCIA_ESTAG ON VAGAS_ESTAGIO
(
  ID_AGENCIA_ESTAGIO
) 
;
PROMPT Creating Index fk_VAGAS_ESTAGIO_QUADRO_VAGAS_ on VAGAS_ESTAGIO ...
CREATE INDEX fk_VAGAS_ESTAGIO_QUADRO_VAGAS_ ON VAGAS_ESTAGIO
(
  ID_QUADRO_VAGAS_ESTAGIO
) 
;
PROMPT Creating Index fk_VAGAS_ESTAGIO_ORGAO_ESTAGIO on VAGAS_ESTAGIO ...
CREATE INDEX fk_VAGAS_ESTAGIO_ORGAO_ESTAGIO ON VAGAS_ESTAGIO
(
  ID_ORGAO_ESTAGIO
) 
;
PROMPT Creating Index fk_VAGAS_ESTAGIO_TIPO_VAGA_EST on VAGAS_ESTAGIO ...
CREATE INDEX fk_VAGAS_ESTAGIO_TIPO_VAGA_EST ON VAGAS_ESTAGIO
(
  CS_TIPO_VAGA_ESTAGIO
) 
;

-- DROP TABLE VALOR_TRANSPORTE CASCADE CONSTRAINTS;


PROMPT Creating Table VALOR_TRANSPORTE ...
CREATE TABLE VALOR_TRANSPORTE (
  NB_VALOR_TRANSPORTE NUMBER(10,0) NOT NULL,
  NB_VALOR NUMBER(10,0) NOT NULL
);


PROMPT Creating Primary Key Constraint PRIMARY on table VALOR_TRANSPORTE ... 
ALTER TABLE VALOR_TRANSPORTE
ADD CONSTRAINT PRIMARY PRIMARY KEY
(
  NB_VALOR_TRANSPORTE
)
ENABLE
;

connect SEMAD_ESTAGIO/SEMAD_ESTAGIO;

PROMPT Creating Foreign Key Constraint fk_AGENCIA_ESTAGIO_EMAIL_AGENC on table AGENCIA_ESTAGIO...
ALTER TABLE AGENCIA_ESTAGIO_EMAIL
ADD CONSTRAINT fk_AGENCIA_ESTAGIO_EMAIL_AGENC FOREIGN KEY
(
  ID_AGENCIA_ESTAGIO
)
REFERENCES AGENCIA_ESTAGIO
(
  ID_AGENCIA_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_AGENTE_SETORIAL_EMAIL_AGENT on table AGENTE_SETORIAL_ESTAGIO...
ALTER TABLE AGENTE_SETORIAL_EMAIL
ADD CONSTRAINT fk_AGENTE_SETORIAL_EMAIL_AGENT FOREIGN KEY
(
  ID_AGENTE_SETORIAL_ESTAGIO
)
REFERENCES AGENTE_SETORIAL_ESTAGIO
(
  ID_AGENTE_SETORIAL_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_DESLIGAMENTO_ESTAGIO_ORGAO_ on table ORGAO_AGENTE_SETORIAL...
ALTER TABLE DESLIGAMENTO_ESTAGIO
ADD CONSTRAINT fk_DESLIGAMENTO_ESTAGIO_ORGAO_ FOREIGN KEY
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
)
REFERENCES ORGAO_AGENTE_SETORIAL
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_ESTAGIARIO_PESSOA1 on table PESSOA...
ALTER TABLE ESTAGIARIO
ADD CONSTRAINT fk_ESTAGIARIO_PESSOA1 FOREIGN KEY
(
  ID_PESSOA_ESTAGIARIO
)
REFERENCES PESSOA
(
  ID_PESSOA
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_ESTAGIARIO_FUNCIONARIO_PE1 on table FUNCIONARIO_PE...
ALTER TABLE ESTAGIARIO
ADD CONSTRAINT fk_ESTAGIARIO_FUNCIONARIO_PE1 FOREIGN KEY
(
  NB_FUNCIONARIO,
  ID_PESSOA_FUNCIONARIO
)
REFERENCES FUNCIONARIO_PE
(
  NB_FUNCIONARIO,
  ID_PESSOA_FUNCIONARIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_ESTAGIARIO_CONTRATO_CONTRAT on table CONTRATO_ESTAGIO...
ALTER TABLE ESTAGIARIO_CONTRATO
ADD CONSTRAINT fk_ESTAGIARIO_CONTRATO_CONTRAT FOREIGN KEY
(
  ID_CONTRATO_ESTAGIO
)
REFERENCES CONTRATO_ESTAGIO
(
  ID_CONTRATO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_ESTAGIARIO_ESCOLARIDADE_EST on table ESTAGIARIO...
ALTER TABLE ESTAGIARIO_ESCOLARIDADE
ADD CONSTRAINT fk_ESTAGIARIO_ESCOLARIDADE_EST FOREIGN KEY
(
  NB_ESTAGIARIO
)
REFERENCES ESTAGIARIO
(
  NB_ESTAGIARIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_BOLSA_ESTAGIO_TIPO_VAGA_EST on table TIPO_VAGA_ESTAGIO...
ALTER TABLE BOLSA_ESTAGIO
ADD CONSTRAINT fk_BOLSA_ESTAGIO_TIPO_VAGA_EST FOREIGN KEY
(
  CS_TIPO_VAGA_ESTAGIO
)
REFERENCES TIPO_VAGA_ESTAGIO
(
  CS_TIPO_VAGA_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_CONTRATO_ESTAGIO_SELECAO_ES on table SELECAO_ESTAGIO...
ALTER TABLE CONTRATO_ESTAGIO
ADD CONSTRAINT fk_CONTRATO_ESTAGIO_SELECAO_ES FOREIGN KEY
(
  ID_SELECAO_ESTAGIO
)
REFERENCES SELECAO_ESTAGIO
(
  ID_SELECAO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_CONTRATO_ESTAGIO_ESTAGIARIO on table ESTAGIARIO...
ALTER TABLE CONTRATO_ESTAGIO
ADD CONSTRAINT fk_CONTRATO_ESTAGIO_ESTAGIARIO FOREIGN KEY
(
  NB_ESTAGIARIO
)
REFERENCES ESTAGIARIO
(
  NB_ESTAGIARIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_CONTRATO_ESTAGIO_VAGAS_CURS on table VAGAS_CURSO_ESTAGIO...
ALTER TABLE CONTRATO_ESTAGIO
ADD CONSTRAINT fk_CONTRATO_ESTAGIO_VAGAS_CURS FOREIGN KEY
(
  NB_VAGAS_ESTAGIO,
  ID_CURSO_ESTAGIO
)
REFERENCES VAGAS_CURSO_ESTAGIO
(
  NB_VAGAS_ESTAGIO,
  ID_CURSO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_CURSO_ESTAGIO_AREA_CONHECIM on table AREA_CONHECIMENTO_GE...
ALTER TABLE CURSO_ESTAGIO
ADD CONSTRAINT fk_CURSO_ESTAGIO_AREA_CONHECIM FOREIGN KEY
(
  CS_AREA_CONHECIMENTO
)
REFERENCES AREA_CONHECIMENTO_GE
(
  CS_AREA_CONHECIMENTO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_DESLIGAMENTO_ESTAGIO_CONTRA on table CONTRATO_ESTAGIO...
ALTER TABLE DESLIGAMENTO_ESTAGIO
ADD CONSTRAINT fk_DESLIGAMENTO_ESTAGIO_CONTRA FOREIGN KEY
(
  ID_CONTRATO_ESTAGIO
)
REFERENCES CONTRATO_ESTAGIO
(
  ID_CONTRATO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_DESLIGAMENTO_ESTAGIO_ESTAGI on table ESTAGIARIO...
ALTER TABLE DESLIGAMENTO_ESTAGIO
ADD CONSTRAINT fk_DESLIGAMENTO_ESTAGIO_ESTAGI FOREIGN KEY
(
  NB_ESTAGIARIO
)
REFERENCES ESTAGIARIO
(
  NB_ESTAGIARIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_ESTAGIARIO_SELECAO_SELECAO_ on table SELECAO_ESTAGIO...
ALTER TABLE ESTAGIARIO_SELECAO
ADD CONSTRAINT fk_ESTAGIARIO_SELECAO_SELECAO_ FOREIGN KEY
(
  ID_SELECAO_ESTAGIO
)
REFERENCES SELECAO_ESTAGIO
(
  ID_SELECAO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_ESTAGIARIO_SELECAO_ESTAGIAR on table ESTAGIARIO...
ALTER TABLE ESTAGIARIO_SELECAO
ADD CONSTRAINT fk_ESTAGIARIO_SELECAO_ESTAGIAR FOREIGN KEY
(
  NB_ESTAGIARIO
)
REFERENCES ESTAGIARIO
(
  NB_ESTAGIARIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_FUNCIONARIO_PE_PESSOA_FISIC on table PESSOA_FISICA...
ALTER TABLE FUNCIONARIO_PE
ADD CONSTRAINT fk_FUNCIONARIO_PE_PESSOA_FISIC FOREIGN KEY
(
  ID_PESSOA_FUNCIONARIO
)
REFERENCES PESSOA_FISICA
(
  ID_PESSOA
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_GESTOR_ESTAGIO_ORGAO_GESTOR on table ORGAO_GESTOR_ESTAGIO...
ALTER TABLE GESTOR_ESTAGIO
ADD CONSTRAINT fk_GESTOR_ESTAGIO_ORGAO_GESTOR FOREIGN KEY
(
  ID_ORGAO_GESTOR_ESTAGIO
)
REFERENCES ORGAO_GESTOR_ESTAGIO
(
  ID_ORGAO_GESTOR_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_OFERTA_VAGA_VAGAS_CURSO_EST on table VAGAS_CURSO_ESTAGIO...
ALTER TABLE OFERTA_VAGA
ADD CONSTRAINT fk_OFERTA_VAGA_VAGAS_CURSO_EST FOREIGN KEY
(
  NB_VAGAS_ESTAGIO,
  ID_CURSO_ESTAGIO
)
REFERENCES VAGAS_CURSO_ESTAGIO
(
  NB_VAGAS_ESTAGIO,
  ID_CURSO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_OFERTA_VAGA_SUPERVISOR_ESTA on table SUPERVISOR_ESTAGIO...
ALTER TABLE OFERTA_VAGA
ADD CONSTRAINT fk_OFERTA_VAGA_SUPERVISOR_ESTA FOREIGN KEY
(
  ID_PESSOA_SUPERVISOR
)
REFERENCES SUPERVISOR_ESTAGIO
(
  ID_PESSOA_SUPERVISOR
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_OFERTA_VAGA_ORGAO_AGENTE_SE on table ORGAO_AGENTE_SETORIAL...
ALTER TABLE OFERTA_VAGA
ADD CONSTRAINT fk_OFERTA_VAGA_ORGAO_AGENTE_SE FOREIGN KEY
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
)
REFERENCES ORGAO_AGENTE_SETORIAL
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_ORGAO_AGENTE_SETORIAL_AGENT on table AGENTE_SETORIAL_ESTAGIO...
ALTER TABLE ORGAO_AGENTE_SETORIAL
ADD CONSTRAINT fk_ORGAO_AGENTE_SETORIAL_AGENT FOREIGN KEY
(
  ID_AGENTE_SETORIAL_ESTAGIO
)
REFERENCES AGENTE_SETORIAL_ESTAGIO
(
  ID_AGENTE_SETORIAL_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_ORGAO_AGENTE_SETORIAL_ORGAO on table ORGAO_ESTAGIO...
ALTER TABLE ORGAO_AGENTE_SETORIAL
ADD CONSTRAINT fk_ORGAO_AGENTE_SETORIAL_ORGAO FOREIGN KEY
(
  ID_ORGAO_ESTAGIO
)
REFERENCES ORGAO_ESTAGIO
(
  ID_ORGAO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_ORGAO_GESTOR_EMAIL_GESTOR_E on table GESTOR_ESTAGIO...
ALTER TABLE ORGAO_GESTOR_EMAIL
ADD CONSTRAINT fk_ORGAO_GESTOR_EMAIL_GESTOR_E FOREIGN KEY
(
  NB_GESTOR_ESTAGIO
)
REFERENCES GESTOR_ESTAGIO
(
  NB_GESTOR_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_PESSOA_FISICA_PESSOA1 on table PESSOA...
ALTER TABLE PESSOA_FISICA
ADD CONSTRAINT fk_PESSOA_FISICA_PESSOA1 FOREIGN KEY
(
  ID_PESSOA
)
REFERENCES PESSOA
(
  ID_PESSOA
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_QUADRO_VAGAS_ESTAGIO_ORGAO_ on table ORGAO_GESTOR_ESTAGIO...
ALTER TABLE QUADRO_VAGAS_ESTAGIO
ADD CONSTRAINT fk_QUADRO_VAGAS_ESTAGIO_ORGAO_ FOREIGN KEY
(
  ID_ORGAO_GESTOR_ESTAGIO
)
REFERENCES ORGAO_GESTOR_ESTAGIO
(
  ID_ORGAO_GESTOR_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_RECESSO_REMUNERADO_ESTAGIAR on table ESTAGIARIO...
ALTER TABLE RECESSO_REMUNERADO
ADD CONSTRAINT fk_RECESSO_REMUNERADO_ESTAGIAR FOREIGN KEY
(
  NB_ESTAGIARIO
)
REFERENCES ESTAGIARIO
(
  NB_ESTAGIARIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_RECESSO_REMUNERADO_CONTRATO on table CONTRATO_ESTAGIO...
ALTER TABLE RECESSO_REMUNERADO
ADD CONSTRAINT fk_RECESSO_REMUNERADO_CONTRATO FOREIGN KEY
(
  ID_CONTRATO_ESTAGIO
)
REFERENCES CONTRATO_ESTAGIO
(
  ID_CONTRATO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_RECESSO_REMUNERADO_ORGAO_AG on table ORGAO_AGENTE_SETORIAL...
ALTER TABLE RECESSO_REMUNERADO
ADD CONSTRAINT fk_RECESSO_REMUNERADO_ORGAO_AG FOREIGN KEY
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
)
REFERENCES ORGAO_AGENTE_SETORIAL
(
  ID_ORGAO_ESTAGIO,
  ID_AGENTE_SETORIAL_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_SELECAO_ESTAGIO_OFERTA_VAGA on table OFERTA_VAGA...
ALTER TABLE SELECAO_ESTAGIO
ADD CONSTRAINT fk_SELECAO_ESTAGIO_OFERTA_VAGA FOREIGN KEY
(
  ID_OFERTA_VAGA
)
REFERENCES OFERTA_VAGA
(
  ID_OFERTA_VAGA
)
ENABLE
;

PROMPT Creating Foreign Key Constraint FK_CONSELHO_PROFISSIONAL on table CONSELHO_PROFISSIONAL...
ALTER TABLE SUPERVISOR_ESTAGIO
ADD CONSTRAINT FK_CONSELHO_PROFISSIONAL FOREIGN KEY
(
  ID_CONSELHO_PROFISSIONAL
)
REFERENCES CONSELHO_PROFISSIONAL
(
  ID_CONSELHO_PROFISSIONAL
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_SUPERVISOR_ESTAGIO_FUNCIONA on table FUNCIONARIO_PE...
ALTER TABLE SUPERVISOR_ESTAGIO
ADD CONSTRAINT fk_SUPERVISOR_ESTAGIO_FUNCIONA FOREIGN KEY
(
  NB_FUNCIONARIO,
  ID_PESSOA_FUNCIONARIO
)
REFERENCES FUNCIONARIO_PE
(
  NB_FUNCIONARIO,
  ID_PESSOA_FUNCIONARIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_SUPERVISOR_ESTAGIO_PESSOA1 on table PESSOA...
ALTER TABLE SUPERVISOR_ESTAGIO
ADD CONSTRAINT fk_SUPERVISOR_ESTAGIO_PESSOA1 FOREIGN KEY
(
  ID_PESSOA_SUPERVISOR
)
REFERENCES PESSOA
(
  ID_PESSOA
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_TERMO_ADITIVO_CONTRATO_ESTA on table CONTRATO_ESTAGIO...
ALTER TABLE TERMO_ADITIVO
ADD CONSTRAINT fk_TERMO_ADITIVO_CONTRATO_ESTA FOREIGN KEY
(
  ID_CONTRATO_ESTAGIO
)
REFERENCES CONTRATO_ESTAGIO
(
  ID_CONTRATO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_TERMO_ADITIVO_ESTAGIARIO1 on table ESTAGIARIO...
ALTER TABLE TERMO_ADITIVO
ADD CONSTRAINT fk_TERMO_ADITIVO_ESTAGIARIO1 FOREIGN KEY
(
  NB_ESTAGIARIO
)
REFERENCES ESTAGIARIO
(
  NB_ESTAGIARIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_VAGAS_CURSO_ESTAGIO_VAGAS_E on table VAGAS_ESTAGIO...
ALTER TABLE VAGAS_CURSO_ESTAGIO
ADD CONSTRAINT fk_VAGAS_CURSO_ESTAGIO_VAGAS_E FOREIGN KEY
(
  NB_VAGAS_ESTAGIO
)
REFERENCES VAGAS_ESTAGIO
(
  NB_VAGAS_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_VAGAS_CURSO_ESTAGIO_CURSO_E on table CURSO_ESTAGIO...
ALTER TABLE VAGAS_CURSO_ESTAGIO
ADD CONSTRAINT fk_VAGAS_CURSO_ESTAGIO_CURSO_E FOREIGN KEY
(
  ID_CURSO_ESTAGIO
)
REFERENCES CURSO_ESTAGIO
(
  ID_CURSO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_VAGAS_ESTAGIO_AGENCIA_ESTAG on table AGENCIA_ESTAGIO...
ALTER TABLE VAGAS_ESTAGIO
ADD CONSTRAINT fk_VAGAS_ESTAGIO_AGENCIA_ESTAG FOREIGN KEY
(
  ID_AGENCIA_ESTAGIO
)
REFERENCES AGENCIA_ESTAGIO
(
  ID_AGENCIA_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_VAGAS_ESTAGIO_QUADRO_VAGAS_ on table QUADRO_VAGAS_ESTAGIO...
ALTER TABLE VAGAS_ESTAGIO
ADD CONSTRAINT fk_VAGAS_ESTAGIO_QUADRO_VAGAS_ FOREIGN KEY
(
  ID_QUADRO_VAGAS_ESTAGIO
)
REFERENCES QUADRO_VAGAS_ESTAGIO
(
  ID_QUADRO_VAGAS_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_VAGAS_ESTAGIO_ORGAO_ESTAGIO on table ORGAO_ESTAGIO...
ALTER TABLE VAGAS_ESTAGIO
ADD CONSTRAINT fk_VAGAS_ESTAGIO_ORGAO_ESTAGIO FOREIGN KEY
(
  ID_ORGAO_ESTAGIO
)
REFERENCES ORGAO_ESTAGIO
(
  ID_ORGAO_ESTAGIO
)
ENABLE
;

PROMPT Creating Foreign Key Constraint fk_VAGAS_ESTAGIO_TIPO_VAGA_EST on table TIPO_VAGA_ESTAGIO...
ALTER TABLE VAGAS_ESTAGIO
ADD CONSTRAINT fk_VAGAS_ESTAGIO_TIPO_VAGA_EST FOREIGN KEY
(
  CS_TIPO_VAGA_ESTAGIO
)
REFERENCES TIPO_VAGA_ESTAGIO
(
  CS_TIPO_VAGA_ESTAGIO
)
ENABLE
;

CREATE OR REPLACE TRIGGER AGENTE_SETORIAL_ESTAGIO_ID_A_1 BEFORE INSERT ON AGENTE_SETORIAL_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_AGENTE_SETORIAL_ESTAGIO IS NULL THEN
    SELECT  AGENTE_SETORIAL_ESTAGIO_ID_AGE.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_AGENTE_SETORIAL_ESTAGIO),0) INTO v_newVal FROM AGENTE_SETORIAL_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT AGENTE_SETORIAL_ESTAGIO_ID_AGE.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_AGENTE_SETORIAL_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER AGENCIA_ESTAGIO_ID_AGENCIA_E_1 BEFORE INSERT ON AGENCIA_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_AGENCIA_ESTAGIO IS NULL THEN
    SELECT  AGENCIA_ESTAGIO_ID_AGENCIA_EST.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_AGENCIA_ESTAGIO),0) INTO v_newVal FROM AGENCIA_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT AGENCIA_ESTAGIO_ID_AGENCIA_EST.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_AGENCIA_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER AGENCIA_ESTAGIO_EMAIL_NB_AGE_1 BEFORE INSERT ON AGENCIA_ESTAGIO_EMAIL
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.NB_AGENCIA_ESTAGIO_EMAIL IS NULL THEN
    SELECT  AGENCIA_ESTAGIO_EMAIL_NB_AGENC.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(NB_AGENCIA_ESTAGIO_EMAIL),0) INTO v_newVal FROM AGENCIA_ESTAGIO_EMAIL;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT AGENCIA_ESTAGIO_EMAIL_NB_AGENC.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.NB_AGENCIA_ESTAGIO_EMAIL := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER AGENTE_SETORIAL_EMAIL_NB_AGE_1 BEFORE INSERT ON AGENTE_SETORIAL_EMAIL
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.NB_AGENTE_SETORIAL_EMAIL IS NULL THEN
    SELECT  AGENTE_SETORIAL_EMAIL_NB_AGENT.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(NB_AGENTE_SETORIAL_EMAIL),0) INTO v_newVal FROM AGENTE_SETORIAL_EMAIL;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT AGENTE_SETORIAL_EMAIL_NB_AGENT.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.NB_AGENTE_SETORIAL_EMAIL := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER BOLSA_ESTAGIO_NB_BOLSA_ESTAG_1 BEFORE INSERT ON BOLSA_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.NB_BOLSA_ESTAGIO IS NULL THEN
    SELECT  BOLSA_ESTAGIO_NB_BOLSA_ESTAGIO.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(NB_BOLSA_ESTAGIO),0) INTO v_newVal FROM BOLSA_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT BOLSA_ESTAGIO_NB_BOLSA_ESTAGIO.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.NB_BOLSA_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER CONSELHO_PROFISSIONAL_ID_CON_1 BEFORE INSERT ON CONSELHO_PROFISSIONAL
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_CONSELHO_PROFISSIONAL IS NULL THEN
    SELECT  CONSELHO_PROFISSIONAL_ID_CONSE.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_CONSELHO_PROFISSIONAL),0) INTO v_newVal FROM CONSELHO_PROFISSIONAL;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT CONSELHO_PROFISSIONAL_ID_CONSE.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_CONSELHO_PROFISSIONAL := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER CURSO_ESTAGIO_ID_CURSO_ESTAG_1 BEFORE INSERT ON CURSO_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_CURSO_ESTAGIO IS NULL THEN
    SELECT  CURSO_ESTAGIO_ID_CURSO_ESTAGIO.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_CURSO_ESTAGIO),0) INTO v_newVal FROM CURSO_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT CURSO_ESTAGIO_ID_CURSO_ESTAGIO.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_CURSO_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER DESLIGAMENTO_ESTAGIO_ID_DESL_1 BEFORE INSERT ON DESLIGAMENTO_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_DESLIGAMENTO_ESTAGIO IS NULL THEN
    SELECT  DESLIGAMENTO_ESTAGIO_ID_DESLIG.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_DESLIGAMENTO_ESTAGIO),0) INTO v_newVal FROM DESLIGAMENTO_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT DESLIGAMENTO_ESTAGIO_ID_DESLIG.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_DESLIGAMENTO_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER ESTAGIARIO_NB_ESTAGIARIO_TRG BEFORE INSERT ON ESTAGIARIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.NB_ESTAGIARIO IS NULL THEN
    SELECT  ESTAGIARIO_NB_ESTAGIARIO_SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(NB_ESTAGIARIO),0) INTO v_newVal FROM ESTAGIARIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT ESTAGIARIO_NB_ESTAGIARIO_SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.NB_ESTAGIARIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER FUNCIONARIO_PE_NB_FUNCIONARI_1 BEFORE INSERT ON FUNCIONARIO_PE
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.NB_FUNCIONARIO IS NULL THEN
    SELECT  FUNCIONARIO_PE_NB_FUNCIONARIO_.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(NB_FUNCIONARIO),0) INTO v_newVal FROM FUNCIONARIO_PE;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT FUNCIONARIO_PE_NB_FUNCIONARIO_.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.NB_FUNCIONARIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER GESTOR_ESTAGIO_NB_GESTOR_EST_1 BEFORE INSERT ON GESTOR_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.NB_GESTOR_ESTAGIO IS NULL THEN
    SELECT  GESTOR_ESTAGIO_NB_GESTOR_ESTAG.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(NB_GESTOR_ESTAGIO),0) INTO v_newVal FROM GESTOR_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT GESTOR_ESTAGIO_NB_GESTOR_ESTAG.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.NB_GESTOR_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER OFERTA_VAGA_ID_OFERTA_VAGA_TRG BEFORE INSERT ON OFERTA_VAGA
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_OFERTA_VAGA IS NULL THEN
    SELECT  OFERTA_VAGA_ID_OFERTA_VAGA_SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_OFERTA_VAGA),0) INTO v_newVal FROM OFERTA_VAGA;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT OFERTA_VAGA_ID_OFERTA_VAGA_SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_OFERTA_VAGA := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER ORGAO_ESTAGIO_ID_ORGAO_ESTAG_1 BEFORE INSERT ON ORGAO_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_ORGAO_ESTAGIO IS NULL THEN
    SELECT  ORGAO_ESTAGIO_ID_ORGAO_ESTAGIO.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_ORGAO_ESTAGIO),0) INTO v_newVal FROM ORGAO_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT ORGAO_ESTAGIO_ID_ORGAO_ESTAGIO.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_ORGAO_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER ORGAO_GESTOR_EMAIL_NB_ORGAO__1 BEFORE INSERT ON ORGAO_GESTOR_EMAIL
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.NB_ORGAO_GESTOR_EMAIL IS NULL THEN
    SELECT  ORGAO_GESTOR_EMAIL_NB_ORGAO_GE.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(NB_ORGAO_GESTOR_EMAIL),0) INTO v_newVal FROM ORGAO_GESTOR_EMAIL;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT ORGAO_GESTOR_EMAIL_NB_ORGAO_GE.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.NB_ORGAO_GESTOR_EMAIL := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER ORGAO_GESTOR_ESTAGIO_ID_ORGA_1 BEFORE INSERT ON ORGAO_GESTOR_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_ORGAO_GESTOR_ESTAGIO IS NULL THEN
    SELECT  ORGAO_GESTOR_ESTAGIO_ID_ORGAO_.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_ORGAO_GESTOR_ESTAGIO),0) INTO v_newVal FROM ORGAO_GESTOR_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT ORGAO_GESTOR_ESTAGIO_ID_ORGAO_.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_ORGAO_GESTOR_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER PESSOA_ID_PESSOA_TRG BEFORE INSERT ON PESSOA
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_PESSOA IS NULL THEN
    SELECT  PESSOA_ID_PESSOA_SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_PESSOA),0) INTO v_newVal FROM PESSOA;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT PESSOA_ID_PESSOA_SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_PESSOA := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER QUADRO_VAGAS_ESTAGIO_ID_QUAD_1 BEFORE INSERT ON QUADRO_VAGAS_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_QUADRO_VAGAS_ESTAGIO IS NULL THEN
    SELECT  QUADRO_VAGAS_ESTAGIO_ID_QUADRO.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_QUADRO_VAGAS_ESTAGIO),0) INTO v_newVal FROM QUADRO_VAGAS_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT QUADRO_VAGAS_ESTAGIO_ID_QUADRO.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_QUADRO_VAGAS_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER RECESSO_REMUNERADO_ID_RECESS_1 BEFORE INSERT ON RECESSO_REMUNERADO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_RECESSO_REMUNERADO IS NULL THEN
    SELECT  RECESSO_REMUNERADO_ID_RECESSO_.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_RECESSO_REMUNERADO),0) INTO v_newVal FROM RECESSO_REMUNERADO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT RECESSO_REMUNERADO_ID_RECESSO_.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_RECESSO_REMUNERADO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER SELECAO_ESTAGIO_ID_SELECAO_E_1 BEFORE INSERT ON SELECAO_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_SELECAO_ESTAGIO IS NULL THEN
    SELECT  SELECAO_ESTAGIO_ID_SELECAO_EST.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_SELECAO_ESTAGIO),0) INTO v_newVal FROM SELECAO_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT SELECAO_ESTAGIO_ID_SELECAO_EST.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_SELECAO_ESTAGIO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER TERMO_ADITIVO_ID_TERMO_ADITI_1 BEFORE INSERT ON TERMO_ADITIVO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.ID_TERMO_ADITIVO IS NULL THEN
    SELECT  TERMO_ADITIVO_ID_TERMO_ADITIVO.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(ID_TERMO_ADITIVO),0) INTO v_newVal FROM TERMO_ADITIVO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT TERMO_ADITIVO_ID_TERMO_ADITIVO.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.ID_TERMO_ADITIVO := v_newVal;
  END IF;
END;

/

CREATE OR REPLACE TRIGGER VAGAS_ESTAGIO_NB_VAGAS_ESTAG_1 BEFORE INSERT ON VAGAS_ESTAGIO
FOR EACH ROW
DECLARE 
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.NB_VAGAS_ESTAGIO IS NULL THEN
    SELECT  VAGAS_ESTAGIO_NB_VAGAS_ESTAGIO.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN 
      --get the max indentity value from the table
      SELECT NVL(max(NB_VAGAS_ESTAGIO),0) INTO v_newVal FROM VAGAS_ESTAGIO;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT VAGAS_ESTAGIO_NB_VAGAS_ESTAGIO.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
    --used to emulate LAST_INSERT_ID()
    --mysql_utilities.identity := v_newVal; 
   -- assign the value from the sequence to emulate the identity column
   :new.NB_VAGAS_ESTAGIO := v_newVal;
  END IF;
END;

/

DISCONNECT;
